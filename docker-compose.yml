version: '3.7'

services:

   zookeeper-geo-data-streaming:
       image: zookeeper:3.6.1
       container_name: zookeeper-geo-data-streaming
       hostname: zookeeper-geo-data-streaming
       ports:
           - 2181:2181
       environment:
           ZOOKEEPER_CLIENT_PORT: 2181
           ZOOKEEPER_TICK_TIME: 2000
       networks:
           - geo-data-streaming-network

   kafka-geo-data-streaming:
       image: confluentinc/cp-kafka:5.5.0
       container_name: kafka-geo-data-streaming
       hostname: kafka-geo-data-streaming
       ports:
           - 29092:29092
           - 9092:9092
       environment:
           KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-geo-data-streaming:29092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
           KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
           KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
           KAFKA_ZOOKEEPER_CONNECT: "zookeeper-geo-data-streaming:2181"
           KAFKA_BROKER_ID: 1
           KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
           KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       networks:
           - geo-data-streaming-network
       depends_on:
           - zookeeper-geo-data-streaming
           
   kafka-setup-geo-data-streaming:
       image: confluentinc/cp-kafka:5.5.0
       container_name: kafka-setup-geo-data-streaming
       hostname: kafka-setup-geo-data-streaming
       command: "bash -c 'echo Waiting for Kafka to be ready... && \
                   cub kafka-ready -b kafka-geo-data-streaming:29092 1 20 && \
                   kafka-topics --zookeeper zookeeper-geo-data-streaming:2181 --create --if-not-exists --topic mongo.geo-data-streaming.geoData --partitions 3 --replication-factor 1 && \
                   kafka-topics --zookeeper zookeeper-geo-data-streaming:2181 --create --if-not-exists --topic northern.hemisphere.geo.data --partitions 3 --replication-factor 1 && \
                   kafka-topics --zookeeper zookeeper-geo-data-streaming:2181 --create --if-not-exists --topic southern.hemisphere.geo.data --partitions 3 --replication-factor 1 && \
                   kafka-topics --zookeeper zookeeper-geo-data-streaming:2181 --create --if-not-exists --topic hemisphere.geo.data.statistics --partitions 1 --replication-factor 1 \
                     --config cleanup.policy=compact \
                     --config min.cleanable.dirty.ratio=0.005 \
                     --config segment.ms=10000'"
       environment:
           KAFKA_BROKER_ID: ignored
           KAFKA_ZOOKEEPER_CONNECT: ignored
       networks:
           - geo-data-streaming-network
       depends_on:
           - kafka-geo-data-streaming

   geo-data-mongodb:
       image: mongo:4.2.7
       container_name: geo-data-mongodb
       hostname: geo-data-mongodb
       environment:
           MONGO_INITDB_DATABASE: geo-data-streaming
       ports:
           - 4250:27017
       networks:
          - geo-data-streaming-network
       healthcheck:
            test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
            interval: 10s
            start_period: 30s
       command: ["--replSet", "rs0", "--bind_ip_all"]
           
   geo-data-generator:
       build:
          context: .
          dockerfile: Dockerfile.geo-data-generator
       image: geo-data-generator:latest
       container_name: geo-data-generator
       environment:
          MONGO_DB_URI: mongodb://geo-data-mongodb/geo-data-streaming
       depends_on:
          - geo-data-mongodb
       networks:
          - geo-data-streaming-network
          
   geo-data-kafka-streams:
       build:
          context: .
          dockerfile: Dockerfile.geo-data-kafka-streams
       image: geo-data-kafka-streams:latest
       container_name: geo-data-kafka-streams
       environment:
          KAFKA_URI: kafka-geo-data-streaming:29092
       depends_on:
          - kafka-setup-geo-data-streaming
       networks:
          - geo-data-streaming-network
       
networks:
   geo-data-streaming-network:
      name: geo-data-streaming-network
      driver: bridge
      attachable: true